# Configure mitmproxy to intercept Puppet SSL traffic
#
# This class installs mitmproxy.org and creates a SystemD
# service that configures the proxy to intercept SSL traffic
# generated by Puppet Services when running.
#
# The service is not started or enabled to start at boot as
# mitmproxy will buffer intercepted traffic in RAM until stopped.
# Start it manually when debugging and stop when done to release
# resources.
class pbug::mitmproxy {
  ensure_packages('python3-pip')

  package { 'mitmproxy':
    ensure   => present,
    provider => pip,
    command  => '/usr/bin/pip3',
    require  => Package['python3-pip'],
  }

  user { 'mitmproxy':
    ensure     => present,
    managehome => true,
  }

  exec { 'generate mitmproxy cert bundle':
    command  => 'cat "$(/opt/puppetlabs/bin/puppet config print hostprivkey)" "$(/opt/puppetlabs/bin/puppet config print hostcert)" > /home/mitmproxy/cert_bundle.pem',
    provider => shell,
    creates  => '/home/mitmproxy/cert_bundle.pem',
    require  => User['mitmproxy'],
  }

  file { '/usr/local/bin/mitmproxy-intercept':
    ensure => file,
    owner  => 'root',
    mode   => '0755',
    source => 'puppet:///modules/pbug/mitmproxy/mitmproxy-intercept',
  }

  exec { 'mitmproxy systemctl daemon-reload':
    command     => '/bin/systemctl daemon-reload',
    refreshonly => true,
  }

  file { '/etc/systemd/system/mitmproxy.service':
    ensure  => present,
    owner   => 'root',
    mode    => '0644',
    notify  => Exec['mitmproxy systemctl daemon-reload'],
    content => epp('pbug/mitmproxy/mitmproxy.service.epp',
                   {'systemd_version' => fact('pbug.versions.systemd')}),
  }
}
